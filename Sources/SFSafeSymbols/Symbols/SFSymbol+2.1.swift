// Don't touch this manually, this code is generated by the SymbolsGenerator helper tool

// 2.1 Symbols
@available(iOS 14.2, macOS 11.0, tvOS 14.2, watchOS 7.1, *)
public extension SFSymbol {
    /// 􀵀
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    /// - Multicolor (3.0 – iOS 15.0)
    static let aqiHigh = SFSymbol(rawValue: "aqi.high")

    /// 􀴾
    /// Single Localization, Single Layerset
    static let aqiLow = SFSymbol(rawValue: "aqi.low")

    /// 􀴿
    /// Single Localization, Single Layerset
    static let aqiMedium = SFSymbol(rawValue: "aqi.medium")

    /// 􀮰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let brazilianrealsignCircle = SFSymbol(rawValue: "brazilianrealsign.circle")

    /// 􀮱
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    /// - Multicolor (3.0 – iOS 15.0)
    static let brazilianrealsignCircleFill = SFSymbol(rawValue: "brazilianrealsign.circle.fill")

    /// 􀮲
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let brazilianrealsignSquare = SFSymbol(rawValue: "brazilianrealsign.square")

    /// 􀮳
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    /// - Multicolor (3.0 – iOS 15.0)
    static let brazilianrealsignSquareFill = SFSymbol(rawValue: "brazilianrealsign.square.fill")

    /// 􀒭
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let cartCircle = SFSymbol(rawValue: "cart.circle")

    /// 􀒮
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    /// - Multicolor (3.0 – iOS 15.0)
    static let cartCircleFill = SFSymbol(rawValue: "cart.circle.fill")

    /// 􀅏
    /// 9 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    /// - Traditional Chinese
    static let character = SFSymbol(rawValue: "character")

    /// 􀫕
    /// 9 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    /// - Traditional Chinese
    static let characterBookClosed = SFSymbol(rawValue: "character.book.closed")

    /// 􀫖
    /// 9 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    /// - Traditional Chinese
    static let characterBookClosedFill = SFSymbol(rawValue: "character.book.closed.fill")

    /// 􀯛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let clockArrow2Circlepath = SFSymbol(rawValue: "clock.arrow.2.circlepath")

    /// 􀯝
    /// Single Localization, Single Layerset
    static let directcurrent = SFSymbol(rawValue: "directcurrent")

    /// 􀵄
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Watch.
    static let exclamationmarkApplewatch = SFSymbol(rawValue: "exclamationmark.applewatch")

    /// 􀵏
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let infinityCircle = SFSymbol(rawValue: "infinity.circle")

    /// 􀵐
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    /// - Multicolor (3.0 – iOS 15.0)
    static let infinityCircleFill = SFSymbol(rawValue: "infinity.circle.fill")

    /// 􀴓
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadBadgePlay = SFSymbol(rawValue: "ipad.badge.play")

    /// 􀴒
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadHomebuttonBadgePlay = SFSymbol(rawValue: "ipad.homebutton.badge.play")

    /// 􀵑
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadHomebuttonLandscapeBadgePlay = SFSymbol(rawValue: "ipad.homebutton.landscape.badge.play")

    /// 􀵒
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPad.
    static let ipadLandscapeBadgePlay = SFSymbol(rawValue: "ipad.landscape.badge.play")

    /// 􀴑
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneBadgePlay = SFSymbol(rawValue: "iphone.badge.play")

    /// 􀐶
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneHomebuttonBadgePlay = SFSymbol(rawValue: "iphone.homebutton.badge.play")

    /// 􀴎
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneHomebuttonLandscape = SFSymbol(rawValue: "iphone.homebutton.landscape")

    /// 􀴏
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPhone.
    static let iphoneLandscape = SFSymbol(rawValue: "iphone.landscape")

    /// 􀴐
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple’s iPod touch.
    static let ipodtouchLandscape = SFSymbol(rawValue: "ipodtouch.landscape")

    /// 􀵅
    /// Single Localization, 2 Layersets, ⚠️ Restricted
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    ///
    /// - Warning: ⚠️ This symbol may not be modified and may only be used to refer to Apple Watch.
    static let lockApplewatch = SFSymbol(rawValue: "lock.applewatch")

    /// 􀵪
    /// Single Localization, Single Layerset
    static let photoTv = SFSymbol(rawValue: "photo.tv")

    /// 􀵨
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let playTv = SFSymbol(rawValue: "play.tv")

    /// 􀵩
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let playTvFill = SFSymbol(rawValue: "play.tv.fill")

    /// 􀵚
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let rectangleBadgePersonCrop = SFSymbol(rawValue: "rectangle.badge.person.crop")

    /// 􀵛
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let rectangleFillBadgePersonCrop = SFSymbol(rawValue: "rectangle.fill.badge.person.crop")

    /// 􀴊
    /// Single Localization, Single Layerset
    @available(iOS, introduced: 14.2, deprecated: 14.5, renamed: "rectangleTopthirdInsetFill")
    @available(macOS, introduced: 11.0, deprecated: 11.3, renamed: "rectangleTopthirdInsetFill")
    @available(tvOS, introduced: 14.2, deprecated: 14.5, renamed: "rectangleTopthirdInsetFill")
    @available(watchOS, introduced: 7.1, deprecated: 7.4, renamed: "rectangleTopthirdInsetFill")
    static let rectangleTopthirdInset = SFSymbol(rawValue: "rectangle.topthird.inset")

    /// 􀵍
    /// 3 Localizations, 2 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (3.0 – iOS 15.0)
    /// - Hindi (3.0 – iOS 15.0)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let repeat1Circle = SFSymbol(rawValue: "repeat.1.circle")

    /// 􀵎
    /// 3 Localizations, 3 Layersets
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic (3.0 – iOS 15.0)
    /// - Hindi (3.0 – iOS 15.0)
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    /// - Multicolor (3.0 – iOS 15.0)
    static let repeat1CircleFill = SFSymbol(rawValue: "repeat.1.circle.fill")

    /// 􀵋
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let repeatCircle = SFSymbol(rawValue: "repeat.circle")

    /// 􀵌
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    /// - Multicolor (3.0 – iOS 15.0)
    static let repeatCircleFill = SFSymbol(rawValue: "repeat.circle.fill")

    /// 􀵔
    /// Single Localization, Single Layerset
    @available(iOS, introduced: 14.2, deprecated: 15.0, renamed: "checkerboardShield")
    @available(macOS, introduced: 11.0, deprecated: 12.0, renamed: "checkerboardShield")
    @available(tvOS, introduced: 14.2, deprecated: 15.0, renamed: "checkerboardShield")
    @available(watchOS, introduced: 7.1, deprecated: 8.0, renamed: "checkerboardShield")
    static let shieldCheckerboard = SFSymbol(rawValue: "shield.checkerboard")

    /// 􀵉
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let shuffleCircle = SFSymbol(rawValue: "shuffle.circle")

    /// 􀵊
    /// Single Localization, 3 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    /// - Multicolor (3.0 – iOS 15.0)
    static let shuffleCircleFill = SFSymbol(rawValue: "shuffle.circle.fill")

    /// 􀵿
    /// 9 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    /// - Traditional Chinese
    static let textformatSizeLarger = SFSymbol(rawValue: "textformat.size.larger")

    /// 􀵷
    /// 9 Localizations, Single Layerset
    ///
    /// Localizations:
    /// - Latin
    /// - Arabic
    /// - Chinese
    /// - Hebrew
    /// - Hindi
    /// - Japanese
    /// - Korean
    /// - Thai
    /// - Traditional Chinese
    static let textformatSizeSmaller = SFSymbol(rawValue: "textformat.size.smaller")

    /// 􀴌
    /// Single Localization, Single Layerset
    static let torus = SFSymbol(rawValue: "torus")

    /// 􀲰
    /// Single Localization, 2 Layersets
    ///
    /// Layersets:
    /// - Monochrome
    /// - Hierarchical (3.0 – iOS 15.0)
    static let tvAndMediabox = SFSymbol(rawValue: "tv.and.mediabox")
}
